#!/bin/zsh

source "$HOME/.dotfiles/bin/lib/dot-util" "$0" "$@"

if [ "$profileName" ]; then
	echo "Profile: $profileName"
elif [ "$1" ] && [ -d "$dotfilesPath/profiles/$1" ]; then
	profileName=$1
else
	echo -e "\n\"$1\" is not a valid profile. You can provide one as an argument, eg: $0 <profile>\n\n$(ls $dotfilesPath/profiles)\n"

	read profileName

	exit #?
fi

echo $profileName > $HOME/.dotfilesProfile
profilePath="$dotfilesPath/profiles/$profileName"

[[ -e $profilePath/dot-update.d/0_setup ]] && $profilePath/dot-update.d/0_setup

echo "Creating common directories"

mkdir -p $HOME/Pictures/Wallpapers $HOME/Pictures/Screenshots $HOME/bin $HOME/Projects $HOME/.dot-update.d $HOME/.zshrc.d $HOME/.zshenv.d

[[ ! -e $HOME/.dot-update.d/local ]] && {
	echo "Creating local update stub"

	echo "#!/bin/zsh" > $HOME/.dot-update.d/local
	chmod a+x $HOME/.dot-update.d/local
}

[[ ! -e $HOME/.zshrc.d/local ]] && {
	echo "Creating local zshrc stub"

	echo "#!/bin/zsh" > $HOME/.zshrc.d/local
	chmod a+x $HOME/.zshrc.d/local
}

[[ ! -e $HOME/.zshenv.d/local ]] && {
	echo "Creating local zshenv stub"

	echo "#!/bin/zsh" > $HOME/.zshenv.d/local
	chmod a+x $HOME/.zshenv.d/local
}
